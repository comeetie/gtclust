}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
exp(xy_opt$par)
11.5+6
# derivative
# ! lpi = sum(log(pi))
g_reppostdiririchlet=function(beta,lpi,n,lambda){
alpha=exp(beta)
alpha*(n*digamma(sum(alpha))-n*digamma(alpha)+(lpi-lambda))
}
gd_reppostdiririchlet=function(beta,lpi,n,lambda){
-exp(2*beta)*n*trigamma(exp(beta))
}
z_reppostdiririchlet=function(beta,lpi,n,lambda){
n*trigamma(sum(exp(beta)))
}
c(1,2,3)%*%c(1,2,3)
t(c(1,2,3))%*%c(1,2,3)
outer(c(1,2,3),c(1,2,3))
# derivative
# ! lpi = sum(log(pi))
g_reppostdiririchlet=function(beta,lpi,n,lambda){
alpha=exp(beta)
alpha*(n*digamma(sum(alpha))-n*digamma(alpha)+(lpi-lambda))
}
gd_reppostdiririchlet=function(beta,lpi,n,lambda){
-exp(2*beta)*n*trigamma(exp(beta))
}
z_reppostdiririchlet=function(beta,lpi,n,lambda){
n*trigamma(sum(exp(beta)))
}
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
D = diag(g+gd)
H = D+z*outer(exp(beta),exp(beta))
solve(H)%*%g
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
H
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
D = diag(g+gd)
beta$
q
beta
lpi
n
lambda
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
D = diag(g+gd)
D
H = D+z*outer(exp(beta),exp(beta))
H
solve(H)%*%g
# derivative
# ! lpi = sum(log(pi))
g_reppostdiririchlet=function(beta,lpi,n,lambda){
alpha=exp(beta)
alpha*(n*digamma(sum(alpha))-n*digamma(alpha)+(lpi-lambda))
}
gd_reppostdiririchlet=function(beta,lpi,n,lambda){
-exp(2*beta)*n*trigamma(exp(beta))
}
z_reppostdiririchlet=function(beta,lpi,n,lambda){
n*trigamma(sum(exp(beta)))
}
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
D = diag(g+gd)
H = D+z*outer(exp(beta),exp(beta))
solve(H)%*%g
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
# derivative
# ! lpi = sum(log(pi))
g_reppostdiririchlet=function(beta,lpi,n,lambda){
alpha=exp(beta)
alpha*(n*digamma(sum(alpha))-n*digamma(alpha)+(lpi-lambda))
}
gd_reppostdiririchlet=function(beta,lpi,n,lambda){
-exp(2*beta)*n*trigamma(exp(beta))
}
z_reppostdiririchlet=function(beta,lpi,n,lambda){
n*trigamma(sum(exp(beta)))
}
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
D = diag(g+gd)
H = D+z*outer(exp(beta),exp(beta))
solve(H)%*%g
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
beta = beta0
nbit = 5000
i=0
delta=10
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
beta
# ! lpi = sum(log(pi))
g_reppostdiririchlet=function(beta,lpi,n,lambda){
alpha=exp(beta)
alpha*(n*digamma(sum(alpha))-n*digamma(alpha)+(lpi-lambda))
}
gd_reppostdiririchlet=function(beta,lpi,n,lambda){
-exp(2*beta)*n*trigamma(exp(beta))
}
z_reppostdiririchlet=function(beta,lpi,n,lambda){
n*trigamma(sum(exp(beta)))
}
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
D = diag(g+gd)
H = D+z*outer(exp(beta),exp(beta))
as.vector(solve(H)%*%g)
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
xy_opt$par
aa=reppostdiririchlet(beta0,lpi,n,lambda)
aa
pdf_r(aa)
pdf_r(xy_opt$par)
matrix(1:100,10)
matrix(1:100,10)/rep(2,100)
matrix(1:100,10)/rep(2,10)
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
Di = diag(1/(g+gd))
nf = (1/z+sum(exp(2*beta)/(g+gd)))
off_diag = outer(exp(beta),exp(beta))
off_diag = off_diag/(g+gd)
off_diag = t(t(off_diag)/(g+gd))
Hi = Di+nf*off_diag
Hi%*%g
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
off_diag
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
Di = diag(1/(g+gd))
nf = (1/z+sum(exp(2*beta)/(g+gd)))
off_diag = outer(exp(beta),exp(beta))
off_diag = off_diag/(g+gd)
off_diag = t(t(off_diag)/(g+gd))
Hi = Di+nf*off_diag
as.vector(Hi%*%g)
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
Di = diag(1/(g+gd))
nf = (1/z+sum(exp(2*beta)/(g+gd)))
off_diag = outer(exp(beta),exp(beta))
off_diag = off_diag/(g+gd)
off_diag = t(t(off_diag)/(g+gd))
Hi = Di+nf*off_diag
as.vector(Hi%*%g)
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-6 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
Di = diag(1/(g+gd))
nf = (1/z+sum(exp(2*beta)/(g+gd)))
off_diag = outer(exp(beta),exp(beta))
off_diag = off_diag/(g+gd)
off_diag = t(t(off_diag)/(g+gd))
Hi = Di+1/nf*off_diag
as.vector(Hi%*%g)
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-6 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
up_reppostdiririchlet=function(beta,lpi,n,lambda){
g  = g_reppostdiririchlet(beta,lpi,n,lambda)
gd = gd_reppostdiririchlet(beta,lpi,n,lambda)
z  = z_reppostdiririchlet(beta,lpi,n,lambda)
Di = diag(1/(g+gd))
nf = (1/z+sum(exp(2*beta)/(g+gd)))
off_diag = outer(exp(beta),exp(beta))
off_diag = off_diag/(g+gd)
off_diag = t(t(off_diag)/(g+gd))
Hi = Di-1/nf*off_diag
as.vector(Hi%*%g)
}
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-6 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
reppostdiririchlet=function(beta0,lpi,n,lambda){
beta = beta0
nbit = 5000
i=0
delta=10
while(delta>10^-8 & i<nbit){
i=i+1
beta_old=beta
beta=beta-up_reppostdiririchlet(beta,lpi,n,lambda)
print("##")
print(beta-beta_old)
delta = pdf_r(beta)-pdf_r(beta_old)
print(delta)
}
print(i)
beta
}
alpha0=mmom_alpha(pi)
beta0=log(alpha0)
n=nrow(pi)
lpi=colSums(log(pi))
reppostdiririchlet(beta0,lpi,n,lambda)
xy_opt$par
beta_hat = reppostdiririchlet(beta0,lpi,n,lambda)
pdf_r(beta_hat)
pdf_r(xy_opt$par)
pdf_r(beta_hat)-pdf_r(xy_opt$par)
beta_hat = reppostdiririchlet(c(0,0),lpi,n,lambda)
beta_hat = reppostdiririchlet(c(0.5,0.5),lpi,n,lambda)
beta0
beta_hat = reppostdiririchlet(c(3,4.5),lpi,n,lambda)
beta_hat = reppostdiririchlet(c(6,7.5),lpi,n,lambda)
beta_hat = reppostdiririchlet(c(6,5.5),lpi,n,lambda)
beta_hat = reppostdiririchlet(c(3,5.5),lpi,n,lambda)
beta0
beta_hat = reppostdiririchlet(c(3.5,5.5),lpi,n,lambda)
beta_hat = reppostdiririchlet(c(3.5,5.3),lpi,n,lambda)
beta_hat = reppostdiririchlet(c(3.5,5.3),lpi,n,lambda)
beta_hat
xy_opt$par
xy_opt$counts
pcounts1 = c(35,200,800,32,45,700)/40
n = 500
P=rdirichlet(n,pcounts1)
library(gtools)
P=rdirichlet(n,pcounts1)
gtclust:::dirichlet_evidence(n,rep(0.1,6),colSums(log(P)),colMeans(P))
n = 500
pcounts1 = c(35,200,800,32,45,700)/40
pcounts2 = c(600,35,200,15,50,18)/40
pcounts3 = c(600,350,100,15,10,30)/40
pcounts4 = c(60,35,10,15,250,250)/40
library(gtclust)
n = 500
pcounts1 = c(35,200,800,32,45,700)/40
pcounts2 = c(600,35,200,15,50,18)/40
pcounts3 = c(600,350,100,15,10,30)/40
pcounts4 = c(60,35,10,15,250,250)/40
d=length(pcounts1)
library(gtools)
P = rbind(rdirichlet(n,pcounts1),rdirichlet(n,pcounts2),rdirichlet(n,pcounts3),rdirichlet(n,pcounts4))
sol=gtclust_temp(P,method="bayes_dirichlet")
library(gtclust)
gtclust:::dirichlet_evidence(n,rep(0.1,6),colSums(log(P)),colMeans(P))
n = 500
pcounts1 = c(35,200,800,32,45,700)/40
pcounts2 = c(600,35,200,15,50,18)/40
pcounts3 = c(600,350,100,15,10,30)/40
pcounts4 = c(60,35,10,15,250,250)/40
d=length(pcounts1)
library(gtools)
P = rbind(rdirichlet(n,pcounts1),rdirichlet(n,pcounts2),rdirichlet(n,pcounts3),rdirichlet(n,pcounts4))
sol=gtclust_temp(P,method="bayes_dirichlet")
clh = cutree(sol,2)
plot(sol$Ll)
library(gtclust)
n = 500
pcounts1 = c(35,200,800,32,45,700)/40
pcounts2 = c(600,35,200,15,50,18)/40
pcounts3 = c(600,350,100,15,10,30)/40
pcounts4 = c(60,35,10,15,250,250)/40
d=length(pcounts1)
library(gtools)
P = rbind(rdirichlet(n,pcounts1),rdirichlet(n,pcounts2),rdirichlet(n,pcounts3),rdirichlet(n,pcounts4))
sol=gtclust_temp(P,method="bayes_dirichlet")
clh = cutree(sol,2)
library(gtclust)
n = 500
pcounts1 = c(35,200,800,32,45,700)/40
pcounts2 = c(600,35,200,15,50,18)/40
pcounts3 = c(600,350,100,15,10,30)/40
pcounts4 = c(60,35,10,15,250,250)/40
d=length(pcounts1)
library(gtools)
P = rbind(rdirichlet(n,pcounts1),rdirichlet(n,pcounts2),rdirichlet(n,pcounts3),rdirichlet(n,pcounts4))
sol=gtclust_temp(P,method="bayes_dirichlet")
clh = cutree(sol,2)
