if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
pr=sptree_prior(sol,250)
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
intra_clust_graphs = new_intra_clust_graphs
res[g,"intra"] = res[g,"intra"]+
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
pr=sptree_prior(sol,250)
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
intra_clust_graphs = new_intra_clust_graphs
res[g,"intra"] = sum(log_nb_intra)
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
pr=sptree_prior(sol,250)
ggplot(pr)+geom_line(aes(x=k,y=intra-800),color="red")+geom_line(aes(x=k,y=inter-800),color="green")+geom_line(aes(x=k,y=intra+inter-800),color="blue")
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
print(log_nb_intra)
intra_clust_graphs = new_intra_clust_graphs
res[g,"intra"] = sum(log_nb_intra)
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
pr=sptree_prior(sol,250)
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
intra_clust_graphs = new_intra_clust_graphs
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
print(log_nb_intra)
res[g,"intra"] = sum(log_nb_intra)
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
pr=sptree_prior(sol,25)
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
print(log_nb_intra)
pr=sptree_prior(sol,250)
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
intra_clust_graphs = new_intra_clust_graphs
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
print(log_nb_intra)
res[g,"intra"] = sum(log_nb_intra)
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
intra_clust_graphs = new_intra_clust_graphs
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
res[g,"intra"] = sum(log_nb_intra)
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
clp = cl
}
res
}
pr=sptree_prior(sol,250)
ggplot(pr)+geom_line(aes(x=k,y=intra-800),color="red")+geom_line(aes(x=k,y=inter-800),color="green")+geom_line(aes(x=k,y=intra+inter-800),color="blue")
pr=sptree_prior(sol,500)
ggplot(pr)+geom_line(aes(x=k,y=intra-800),color="red")+geom_line(aes(x=k,y=inter-800),color="green")+geom_line(aes(x=k,y=intra+inter-800),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$inter[1]),color="red")+geom_line(aes(x=k,y=inter-800),color="green")+geom_line(aes(x=k,y=intra+inter-800),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-800),color="green")+geom_line(aes(x=k,y=intra+inter-800),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")
t=system.time()
t=System.time()
?Sys.time
tdeb=Sys.time
sptree_prior=function(sol,k){
A = to_adjmat(sol$adjacencies_list)
clp = rep(1,nrow(A))
res = data.frame(k=1:k,inter=NA,intra=NA)
res[1,"intra"]=log_nb_sptree(A)
res[1,"inter"]=0
intra_clust_graphs = list(A)
inter_clust_graph  = Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(1,1))
log_nb_intra = c(res[1,"intra"])
for (g in 2:k){
print(g)
cl = cutree(sol,g)
comp_cl = table(clp,cl)
isplit = which(rowSums(comp_cl>0)==2)
tdeb=Sys.time()
new_intra_clust_graphs_temp=lapply(which(comp_cl[isplit,]>0),function(k){A[cl==k,cl==k]})
perm = apply(comp_cl,1,function(row){which(row>0)})
perm_old = unlist(perm[sapply(perm,length)==1])
print("intra graph creation")
print(Sys.time()-tdeb)
new_clusters=which(comp_cl[isplit,]>0)
new_intra_clust_graphs=list()
tdeb=Sys.time()
if(g>2){
new_intra_clust_graphs[perm_old]=intra_clust_graphs[-isplit]
log_nb_intra[perm_old]=log_nb_intra[-isplit]
}
new_intra_clust_graphs[new_clusters]=new_intra_clust_graphs_temp
intra_clust_graphs = new_intra_clust_graphs
log_nb_intra[new_clusters] = sapply(intra_clust_graphs[new_clusters], log_nb_sptree)
res[g,"intra"] = sum(log_nb_intra)
print("intra det computation")
print(Sys.time()-tdeb)
tdeb=Sys.time()
new_inter_clust_graph=Matrix::sparseMatrix(i=c(),j=c(),x = 0,dims = c(g,g))
if(g>2){
new_inter_clust_graph[perm_old,perm_old]=inter_clust_graph[-isplit,-isplit]
}
for (h in 1:g){
if(new_clusters[1]!=h){
ec1 = sum(A[cl==new_clusters[1],cl==h])
new_inter_clust_graph[new_clusters[1],h] = ec1
new_inter_clust_graph[h,new_clusters[1]] = ec1
}
if(new_clusters[2]!=h){
ec2 = sum(A[cl==new_clusters[2],cl==h])
new_inter_clust_graph[new_clusters[2],h] = ec2
new_inter_clust_graph[h,new_clusters[2]] = ec2
}
}
inter_clust_graph = new_inter_clust_graph
print("inter graph creation")
print(Sys.time()-tdeb)
tdeb=Sys.time()
res[g,"inter"]=log_nb_sptree(inter_clust_graph)
print("inter det computation")
print(Sys.time()-tdeb)
clp = cl
}
res
}
pr=sptree_prior(sol,50)
pr=sptree_prior(sol,200)
0.005*2000
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$LL[2013:(2013-200),k=1:200]),aes(x=k,y=Ll))
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$LL[2013:(2013-200)],k=1:200]),aes(x=k,y=Ll))
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-200)],k=1:200]),aes(x=k,y=Ll))
sol$Ll[2013:(2013-200)]
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-200)],k=1:200),aes(x=k,y=Ll))
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200),aes(x=k,y=Ll))
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200),aes(x=k,y=-Ll))
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200,cnk=-lgamma(1:200)-lgamma(2013-1:200)),aes(x=k,y=-Ll))
pr$Cnk=lgamma(2013)-lgamma(1:200)-lgamma(2013-1:200)
pr
pr$Cnk=lgamma(2013)-lgamma(0:199)-lgamma(2013-1:200)
pr
pr$Cnk=lgamma(2012)-lgamma(0:199)-lgamma(2013-1:200)
pr$Cnk
lgamma(0)
pr$Cnk=lgamma(2012+1)-lgamma(0:199+1)-lgamma(2013-1:200+1)
pr$Cnk
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200,cnk=-lgamma(1:200)-lgamma(2013-1:200)),aes(x=k,y=-Ll))+geom_line(aes(x=k,y=Xnk),color=purple)
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200)),aes(x=k,y=-Ll))+geom_line(aes(x=k,y=Xnk),color="purple")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200),aes(x=k,y=-Ll))+geom_line(aes(x=k,y=Xnk),color="purple")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200),aes(x=k,y=-Ll))+geom_line(aes(x=k,y=Cnk),color="purple")
ggplot(pr)+geom_line(aes(x=k,y=intra-pr$intra[1]),color="red")+geom_line(aes(x=k,y=inter-pr$intra[1]),color="green")+geom_line(aes(x=k,y=intra+inter-pr$intra[1]),color="blue")+geom_line(data=data.frame(Ll=sol$Ll[2013:(2013-199)],k=1:200),aes(x=k,y=-Ll))+geom_line(aes(x=k,y=-Cnk),color="purple")
pr$Cnk=lgamma(2012+1)-lgamma(0:199+1)-lgamma(2013-1:200+1)
pr$ptot=pr$inter+pr$intra-pr$intra[1]-pr$Cnk
pr$ptot
plot(pr$ptot)
pr$ptot=pr$inter+pr$intra-pr$intra[1]-pr$Cnk-lgamma(1:200+1)
pr$ptot
plot(pr$ptot)
pr$Ll=sol$Ll[2013:(2013-199)]
pr
ggplot(pr)+geom_line(aes(x=k,y=Ll+prtot),color="red")
ggplot(pr)+geom_line(aes(x=k,y=Ll+ptot),color="red")
k_max= 350
N=nrow(links)
pr=sptree_prior(hc_res,k_max)
pr$Cnk=lgamma(N)-lgamma(1:k_max)-lgamma(2013-2:(k_max+1))
pr$ptot=pr$inter+pr$intra-pr$intra[1]-pr$Cnk-lgamma(1:k_max+1)
pr$Ll=-sol$Ll[N:(N-k_max+1)]
pr
plot(pr$Ll)
plot(pr$Ll+pr$ptot)
plot(pr$Ll)
plot(pr$Ll+pr$ptot)
plot(pr$ptot)
plot(pr$Ll+pr$ptot)
plot(sol$Ll)
plot(sol$Ll)
which.min(sol$Ll)
2013-which.min(sol$Ll)
plot(pr$Ll+pr$ptot)
which.max(pr$Ll+pr$ptot)
pr$ptot=pr$inter+pr$intra-pr$intra[1]#-pr$Cnk-lgamma(1:k_max+1)
pr$Ll=-sol$Ll[N:(N-k_max+1)]
plot(pr$Ll+pr$ptot)
which.max(pr$Ll+pr$ptot)
pr$ptot=pr$inter+pr$intra-pr$intra[1]-pr$Cnk-lgamma(1:k_max+1)
which.max(pr$Ll+pr$ptot)
which.max(pr$Ll+pr$ptot)
plot(pr$Ll+pr$ptot)
pr$ptot=pr$inter+pr$intra-pr$intra[1]-pr$Cnk-lgamma(1:k_max+1)
plot(pr$Ll+pr$ptot)
plot(pr$inter)
pr$ptot=pr$intra-pr$intra[1]-pr$Cnk-lgamma(1:k_max+1)
plot(pr$Ll+pr$ptot)
which.max(pr$Ll+pr$ptot)
library(gtclust)
library(gtclust)
devtools::document()
devtools::document()
library(gtclust)
library(gtclust)
library(R.matlab)
library(dplyr)
library(sf)
library(ggplot2)
nodes_raw  = readMat("./data-raw/NODES.mat")
nodes = data.frame(x=nodes_raw$Node[,1],y=nodes_raw$Node[,2],id=1:nrow(nodes_raw$Node))
links_raw  = readMat("./data-raw/LINKS.mat")
links = data.frame(from=links_raw$Link.1[,1],to=links_raw$Link.1[,2])
links=links |> left_join(nodes,by=c("from"="id"))|> left_join(nodes,by=c("to"="id"),suffix=c("","_to"))
Lp = as.matrix(links[,3:6])
links_geom = st_sfc(lapply(1:nrow(links),\(l){ st_linestring(rbind(Lp[l,1:2],Lp[l,3:4]))}))
links$geometry = links_geom
links.sf=st_sf(links)
speeds_raw  = readMat("./data-raw/SPEEDS.mat")
col_n = paste0("T",floor(((1:288)*5)/60),"H",((1:288)*5)%%60)
days = paste0("D",7:9)
speeds = do.call(cbind,lapply(1:3,\(id){
df=data.frame(speeds_raw[[id]])
df[df==0]=NA
colnames(df)=paste0(days[id],col_n)
df
}))
speeds_long = speeds |> mutate(link_id=1:n())|>
tidyr::pivot_longer(-link_id,names_to = "day_h",values_to = "speed")
v=speeds_long |> filter(day_h=="D7T8H30"|day_h=="D7T8H35"|day_h=="D7T8H40") |>
group_by(link_id) |>
summarise(speed=mean(speed,na.rm=TRUE))
v$speed[is.na(v$speed)]=mean(v$speed,na.rm = TRUE)
links.sf$speed=v$speed
sum(is.na(links.sf$speed))
ggplot(links.sf)+geom_sf(aes(color=speed*3.6),size=1.1)+scale_color_distiller("Speed (km/h)",palette="RdYlGn",direction = 1)+theme_void()
hc_res=gtclust_lines(links.sf |> select(speed),gtmethod_bayes_dgmm())
k_max= 350
pr=sptree_prior(hc_res,k_max)
pr=sptree_prior(hc_res,30)
pr
library(gtclust)
